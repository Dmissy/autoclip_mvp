# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
        # 构建镜像
            - 名称：安装 Python
  用途：actions/setup-python@v5.6.0
  和：
    # 使用 SemVer 的版本范围语法，指定要使用的 Python 或 PyPy 的版本范围或确切版本。如果未设置，则从 .python-version 读取。
    python 版本：# 可选
    # 包含要使用的 Python 版本的文件。例如：.python-version
    python-version-file: # 可选
    # 用于指定在默认目录中进行缓存的包管理器。支持的值：pip、pipenv、poetry。
    缓存：#可选
    # Python 或 PyPy 解释器的目标架构（x86、x64、arm64）。
    架构：#可选
    # 如果您希望操作检查满足版本规范的最新可用版本，请设置此选项。
    检查最新：#可选
    # 从 https://github.com/actions/python-versions 获取 Python 发行版时用于身份验证的令牌。在 github.com 上运行此操作时，默认值即可。在 GHES 上运行时，如果您遇到速率限制，可以传递 github.com 的个人访问令牌。
    token: # 可选，默认为 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 用于指定依赖文件的路径。支持通配符或文件名列表，用于缓存多个依赖项。
    缓存依赖路径：#可选
    # 如果您希望操作更新环境变量，请设置此选项。
    update-environment: # 可选，默认为 true
    # 设置为“true”时，如果未找到 GA 版本，则传递给“python-version”输入的版本范围将匹配预发布版本。CPython 仅支持“xy”版本范围。
    allow-prereleases: # 可选
    # 当为“true”时，使用 Python 的自由线程版本。
    freethreaded: # 可选
          
      
